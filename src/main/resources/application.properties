
# Development H2 properties --> Enables the H2 console when connecting via a gateway
spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

# Actuator
management.endpoints.web.exposure.include = *
management.endpoints.enabled-by-default=true

# Kafka
spring.kafka.consumer.client-id=organization-service-client

# Resilience Circuit Breaker - organization database
resilience4j.circuitbreaker.instances.organizationDatabase.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.organizationDatabase.ringBufferSizeInClosedState=6
resilience4j.circuitbreaker.instances.organizationDatabase.ringBufferSizeInHalfOpenState=4
resilience4j.circuitbreaker.instances.organizationDatabase.waitDurationInOpenState=3s
resilience4j.circuitbreaker.instances.organizationDatabase.failureRateThreshold=60
# Exceptions
resilience4j.circuitbreaker.instances.organizationDatabase.recordExceptions=java.io.IOException
resilience4j.circuitbreaker.instances.organizationDatabase.recordExceptions=java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.instances.organizationDatabase.recordExceptions=org.springframework.web.client.ResourceAccessException
resilience4j.circuitbreaker.instances.organizationDatabase.recordExceptions=org.springframework.web.client.HttpServerErrorException

# Resilience Circuit Breaker - feign client -> licensing service
resilience4j.circuitbreaker.instances.licensingService.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.licensingService.ringBufferSizeInClosedState=6
resilience4j.circuitbreaker.instances.licensingService.ringBufferSizeInHalfOpenState=4
resilience4j.circuitbreaker.instances.licensingService.waitDurationInOpenState=3s
resilience4j.circuitbreaker.instances.licensingService.failureRateThreshold=60
# Exceptions
resilience4j.circuitbreaker.instances.licensingService.recordExceptions=java.io.IOException
resilience4j.circuitbreaker.instances.licensingService.recordExceptions=java.util.concurrent.TimeoutException
resilience4j.circuitbreaker.instances.licensingService.recordExceptions=org.springframework.web.client.ResourceAccessException
resilience4j.circuitbreaker.instances.licensingService.recordExceptions=org.springframework.web.client.HttpServerErrorException

# Retry - organization database
resilience4j.retry.instances.retryOrganizationDatabase.maxRetryAttempts=5
resilience4j.retry.instances.retryOrganizationDatabase.retry-exceptions=java.util.concurrent.TimeoutException
resilience4j.retry.instances.retryOrganizationDatabase.waitDuration=10000

#Bulkhead - organization database
resilience4j.bulkhead.instances.bulkheadOrganizationDatabase.max-wait-duration=10ms
resilience4j.bulkhead.instances.bulkheadOrganizationDatabase.max-concurrent-calls=20
resilience4j.thread-pool-bulkhead.instances.bulkheadOrganizationDatabase.max-thread-pool-size=1
resilience4j.thread-pool-bulkhead.instances.bulkheadOrganizationDatabase.core-thread-pool-size=1
resilience4j.thread-pool-bulkhead.instances.bulkheadOrganizationDatabase.queue-capacity=20

# Retry - feign client
resilience4j.retry.instances.retryLicenseService.maxRetryAttempts=5
resilience4j.retry.instances.retryLicenseService.retry-exceptions=java.util.concurrent.TimeoutException
resilience4j.retry.instances.retryLicenseService.waitDuration=10000

#Bulkhead - feign client
resilience4j.bulkhead.instances.bulkheadLicensingService.max-wait-duration=10ms
resilience4j.bulkhead.instances.bulkheadLicensingService.max-concurrent-calls=20
resilience4j.thread-pool-bulkhead.instances.bulkheadLicensingService.max-thread-pool-size=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicensingService.core-thread-pool-size=1
resilience4j.thread-pool-bulkhead.instances.bulkheadLicensingService.queue-capacity=20
resilience4j.thread-pool-bulkhead.instances.bulkheadLicensingService.keep-alive-duration=20ms

# Keycloak configuration
keycloak.realm=orbsec-realm
keycloak.auth-server-url=http://keycloak:8080/auth
keycloak.ssl-required=external
keycloak.resource=orbsec
#  keycloak.credentials.secret --> passed as environment variable
keycloak.credentials.secret=
keycloak.use-resource-role-mappings=true
keycloak.bearer-only=true

## Serializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer